##############################
#                            #
#  Miscellaneous plot stuff  #
#                            #
##############################

#int Tithes = 0
local
object bandit_head
endlocal

##
## Look for the bits of the sceptre thief
##

function king_checkbody
private

set_user_flag "true" = 0
set_user_flag "false" = 1
search_inside player calling king_checkbody2

end

##
## Check for the right body in the player's pocket
##

function king_checkbody2
private

if current is called "deadfollower"
	if current.tag = 2084
		set_user_flag "true" = 1
		set_user_flag "false" = 0
		stop_search
		return
	endif
endif

end


function check_bishop
private
object o

set_user_flag "killed_bishop" = 0
find_tag o = "deadcardinal" 36
if_exists o
	set_user_flag "killed_bishop" = 1
	return
endif

find_tag o = "CARDINAL_HEAD" 36
if_exists o
	set_user_flag "killed_bishop" = 1
	return
endif

end

function check_king
private
object o
set_user_flag "true" = 1
set_user_flag "false" = 0
set_user_flag "killed_king" = 0
find_tag o = "deadking" 36
if_exists o
	set_user_flag "killed_king" = 1
	return
endif

find_tag o = "KING_HEAD" 36
if_exists o
	set_user_flag "killed_king" = 1
	return
endif

find_tag o = "KING" 36
if_exists o
	return
endif

set_user_flag "true" = 0
set_user_flag "false" = 1

end

##
##  Is the Cow still alive?
##

function check_thecow
private
object o

find_tag o = "COW_THECOW" 0
if_exists o
	set_user_flag "true" = 1
	set_user_flag "false" = 0
	return
endif

set_user_flag "true" = 0
set_user_flag "false" = 1

end

##
##  Is your preliminary contact alive?
##

function check_osprey_x36
private
object o

# Assume they're OK
set_user_flag "true" = 1
set_user_flag "false" = 0

# For backwards compatibility with existing savegames, see if the self-check object exists first
find_tag o = "plant1" 80
if_not_exist o
	return
endif

find_tag o = "OSPREY" 80
if_exists o
	return
endif

# They're not around, punish the player
set_user_flag "true" = 0
set_user_flag "false" = 1

end




##
##  Add 1320 to your dues to the Church
##

function tithes_add1320
add player.user.potion9 + 1320
end

##
##  Get sceptre tithes amount remaining, used by the Crucifix
##

function tithes_num
#let usernum1 = Tithes
let usernum1 = player.user.potion9

end

##
##  Sceptre Tithes flag, TRUE if not yet paid
##

function tithes_check

set_user_flag "true" = 0
set_user_flag "false" = 1

#if Tithes > 0
if player.user.potion9 > 0

	set_user_flag "true" = 1
	set_user_flag "false" = 0
endif
end

##
##  Pay off the Tithes, used by the Bishop
##

function tithes_paid
#let Tithes = 0
let player.user.potion9 = 0
end

##
##  Call the speaker's wield function
##

function talk_callwield
call current.funcs.wield
end

##
##  Do you have any fish that belonged to Munrick the Unstable?
##

function stolen_fish
object o

set_user_flag "TRUE" = 0
set_user_flag "FALSE" = 1

find o = "food08" inside me
if_exists o
	if o.tag = 57
		set_user_flag "TRUE" = 1
		set_user_flag "FALSE" = 1
	endif
endif
end

##
##  selL youR souL tO sataN   (which is the Mr. Ed theme tune backwards)
##

function sellyoursoultosatan

let me.stats.karma = -100 # Really bad mojo

end


function check_sheep

set_user_flag "goodsheep" = 0
set_user_flag "badsheep" = 0

search_world count_sheep
end

##
##  Helper
##

function count_sheep
	if current.tag = 800
		if current is called "sheep"
			set_user_flag "goodsheep" = 1
		endif
		if current is called "sheep_evil"
			set_user_flag "badsheep" = 1
		endif
	endif
end

##
##  Send the farmer to their doom
##

function find_badsheep
object targ

find_tag targ = "TARGET" 800

let current.target = targ
let current.user.pathgoal = current.target # Store our ultimate destination

insert_action current does go_to_location2 to current.target
queue_action current does punch_sheep
end


# Hit the sheep and start a massive fight

function punch_sheep
object badsheep
find_nearest badsheep = "sheep_evil" near me

let me.enemy = badsheep
let current = me
call start_attack

end


##
##  Are the four forcefields shut down?
##

function check_ship_ffields
object field

set_user_flag "true" = 1
set_user_flag "false" = 0

# If any of these are present, bail out

find_tag field = "forcefield_on" 50
if_exists field
	return
endif

find_tag field = "forcefield_on" 51
if_exists field
	return
endif

find_tag field = "forcefield_on" 52
if_exists field
	return
endif

find_tag field = "forcefield_on" 53
if_exists field
	return
endif

# None there, that's good
set_user_flag "true" = 0
set_user_flag "false" = 1

end


##
## See how many fish the player has and calculate the cost
##

function count_fish

# Assume it failed
set_user_flag "true" = 0
set_user_flag "false" = 1

let usernum1 = 0
search_inside player calling count_fish2

if usernum1 > 0
	set_user_flag "true" = 1
	set_user_flag "false" = 0
endif

end

##
## Calculate the worth of the player's fish
##

function count_fish2
private

if current is called "food08"
	add usernum1 + 3
endif

end


##
## See how many fish the player has and calculate the cost
##

function sell_all_fish
let usernum1 = 0

# Assume it failed
set_user_flag "true" = 0
set_user_flag "false" = 1

search_inside player calling count_fish3

if usernum1 > 0
	set_user_flag "true" = 1
	set_user_flag "false" = 0
endif
end

##
## Calculate the worth of the player's fish and remove them
##

function count_fish3
private

if current is called "food08"
	add usernum1 + 3
	destroy current
endif

end



##
##  DelucaMagic
##

function deluca_testmagic
object o
set_user_flag "true" = 0
set_user_flag "false" = 1

# Is candlestick 1 now lit?
find_tag o = "*" 666002
if o is called "candlestkunlit"
	return
endif

# Is candlestick 2 now doused?
find_tag o = "*" 666003
if o is called "candlestk"
	return
endif

# Is the plate intact?
find_tag o = "PLATE" 666004
if_exists o
	return
endif

# Success!
set_user_flag "true" = 1
set_user_flag "false" = 0

end

##
##  Reset the apparatus
##

function deluca_resetmagic
object o
object newobj

# Reset the candlestick
find_tag o = "*" 666002
if_exists o
	replace o = "candlestkunlit"
	let o.tag = 666002
else
	# Player has destroyed it somehow
	find_tag o = "TARGET" 666005
	if_exists o
		create newobj = "CANDLESTKUNLIT"
		transfer_object newobj to o.x o.y
		let newobj.tag = 666002
	endif
endif

# Reset 2nd candlestick
find_tag o = "*" 666003
if_exists o
	replace o = "candlestk"
	let o.tag = 666003
else
	# Player has destroyed it somehow
	find_tag o = "TARGET" 666006
	if_exists o
		create newobj = "CANDLESTK"
		transfer_object newobj to o.x o.y
		let newobj.tag = 666003
	endif
endif

# Reset plate candlestick
find_tag o = "*" 666004
if_exists o
	replace o = "plate"
	let o.tag = 666004
else
	# Player has destroyed it somehow
	find_tag o = "TARGET" 666007
	if_exists o
		create newobj = "PLATE"
		transfer_object newobj to o.x o.y
		let newobj.tag = 666004
	endif
endif


end

##
##  Is the player evil?
##

function check_evil

set_user_flag "evil" = 0
if player.stats.karma < 0
	set_user_flag "evil" = 1
endif

end

##
##

function check_bandit_heads
int ctr
string_array bandit[3]
string_array bad[5]
string lookfor
object head

set_array bandit[1] = ( "outlaw_head", "outlaw2_head", "outlaw3_head"  ) 
set_array bad[1] = ( "PLAYER_HEAD", "PEASANT_HEAD", "WOMAN_HEAD", "NOBLE_HEAD", "OLDMAN_HEAD" )

set_user_flag "got_heads" = 0
set_user_flag "bandit_head_ok" = 0
set_user_flag "bandit_head_clergy" = 0
set_user_flag "bandit_head_guard" = 0
set_user_flag "bandit_head_king" = 0
set_user_flag "bandit_head_pope" = 0

let bandit_head = null

# First check for atrocities

find head = "GUARD_HEAD" inside player
if_exists head
	set_user_flag "got_heads" = 1
	set_user_flag "bandit_head_ok" = 0
	set_user_flag "bandit_head_guard" = 1
	let userstr1 = ""
	return
endif

find head = "CARDINAL_HEAD" inside player
if_exists head
	set_user_flag "got_heads" = 1
	set_user_flag "bandit_head_ok" = 0
	set_user_flag "bandit_head_clergy" = 1
	let userstr1 = head.personalname
	return
endif

find head = "KING_HEAD" inside player
if_exists head
	set_user_flag "got_heads" = 1
	set_user_flag "bandit_head_ok" = 0
	set_user_flag "bandit_head_king" = 1
	let userstr1 = head.personalname
	return
endif

find head = "POPE_HEAD" inside player
if_exists head
	set_user_flag "got_heads" = 1
	set_user_flag "bandit_head_ok" = 0
	set_user_flag "bandit_head_pope" = 1
	return
endif

# Then check for the player killing some rando
for ctr = 1 to 5
	let lookfor = bad[ctr]
	find head = lookfor inside player
	if_exists head
		set_user_flag "got_heads" = 1
		set_user_flag "bandit_head_ok" = 0
		let userstr1 = head.personalname
		return
	endif
next

# Check for proper bandit heads
for ctr = 1 to 3
	let lookfor = bandit[ctr]
	find head = lookfor inside player
	if_exists head
		set_user_flag "got_heads" = 1
		set_user_flag "bandit_head_ok" = 1
		let bandit_head = head
		return
	endif
next

# And just for fun
find head = "MEAT01" inside player
if_exists head
	set_user_flag "got_heads" = 1
	set_user_flag "bandit_head_ok" = 0
	set_user_flag "bandit_head_cow" = 1
	let bandit_head = head
endif


end

##
##  Remove the head
##

function take_bandit_head
if_exists bandit_head
	destroy bandit_head
	let bandit_head = null
	add player.stats.karma + 5
	add player.user.experience + 150
endif
end

##
##  Synthesizer
##

function take_synth
object synth
object dest

set_user_flag "true" = 0
set_user_flag "false" = 1

find synth = "SYNTH" inside player
if_exists synth
	find_tag dest = "TARGET" 133
	if_exists dest
		change synth = "SYNTH_OPEN"
		transfer_object synth to dest.x dest.y
		set_user_flag "true" = 1
		set_user_flag "false" = 0
		return
	endif
endif

end


function fix_synth
object synth

find_tag synth = "SYNTH_OPEN" 0
if_exists synth
	change synth = "SYNTH"
endif

end


function give_synth
object synth
object dest

find synth = "SYNTH" inside player
if_exists synth
	find_tag dest = "TARGET" 78
	if_exists dest
		add me.stats.karma + 25
		transfer_object synth to dest.x dest.y

		# Stop player giving it twice
		let synth.stats.weight = -1
		set_flag synth IS_FIXED = 1
		return
	endif
endif

end


##
##
##

function leinad_check_treasure
object treasure

find_tag treasure = "treasure_06" -37
if_exists treasure
	set_user_flag "true" = 1
	set_user_flag "false" = 0
else
	set_user_flag "true" = 0
	set_user_flag "false" = 1
endif

end


function leinad_kill_player
let suspect = player
call justice_intruder_deadly
end

function npc_kill_player
#let current = me
let current.enemy = player
stop_action current
call start_attack
end


function behead_player
let current = player
call behead_current
end


function behead_hero
call find_hero
let current = me
call behead_current
end





##
##  Spell level checks
##

function check_spellR7
let spell_level = 1
call check_spell_level
end

function check_spellR6
let spell_level = 2
call check_spell_level
end

function check_spellR5
let spell_level = 3
call check_spell_level
end

function check_spellR4
let spell_level = 4
call check_spell_level
end

function check_spellR3
let spell_level = 5
call check_spell_level
end

function check_spellR2
let spell_level = 6
call check_spell_level
end

function check_spellR1
let spell_level = 7
call check_spell_level
end

function check_spellR0
let spell_level = 8
call check_spell_level
end

# And the function doing all the work

local
function check_spell_level
set_user_flag "true" = 0
set_user_flag "false" = 1

if player.stats.level >= spell_level
	set_user_flag "true" = 0
	set_user_flag "false" = 1
endif
end

endlocal

# Move the clock forward to the next hour
# to simulate an entire sermon

function advance_hour
private
let game_minute = 0
add game_hour + 1
resync_everything
end
