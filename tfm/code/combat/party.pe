##
##  The game is in Combat Mode, the party do an automatic fight thing like Ultima VI and VII.
##

# This is called once per party member in a loop.  PLAYER will be set to the current party member

function run_combatmode

	integer flag
	object hostile

	# Check keyboard input first to allow us to -leave- combat mode
	call input
	if combat_mode = 0
		return	# Abort, abort
	endif

	# Look for hostiles - this does depend on the enemy combat AI setting the appropriate flag

	# FIXME: Check attack code to make sure hostile flags are set (currently they aren't)
	# FIXME: Make sure switching into combat mode wipes down party enemy fields to avoid them going psycho

	# TODO: Use player.user.combatmode to look for enemies and determine attack strategy
	# TODO: Figure out an exit condition - stop the party beating a dead guard etc
	# TODO: Might want to refine the UNIQUE logic since we may want to have two party members attacking each enemy etc if there are fewer enemies than party members

	# First filter out stupid targets in case the player punched a tree etc
	if_exists player.enemy
		let hostile = player.enemy
		get_hostile flag = hostile
		if flag = 0
			let player.enemy = null
		endif
		if_not_flag hostile IS_PERSON
			let player.enemy = null
		endif
	endif

	if_not_exists player.enemy
		# Find an enemy with the find_hostile routines
		# TODO: support multiple strategies for this

		# TODO: want to merge flags, but no bitfield combining
		find_hostile hostile = HOSTILE_UNIQUE
		if_exists hostile
			let player.enemy = hostile
		endif
	endif

	if_exists player.enemy
		let me = player
		let current = player
		call attack
		return
	endif

	print player.name
	print " has no target"
	printcr
end