####################
#                  #
#  Justice Engine  #
#                  #
####################

const CRIME_NONE = 0
const CRIME_THEFT = 1
const CRIME_MURDER = 2
const CRIME_DESECRATION = 3
const CRIME_HERESY = 4
const CRIME_WITCH = 5
const CRIME_BLASPHEMY = 6
const CRIME_ASSAULT = 7
const CRIME_HIGHTREASON = 8
const CRIME_REGICIDE = 9
const CRIME_TRESPASSING = 10
const CRIME_BEAST = 11		# Wild beast amok.. not a crime as such
const CRIME_TREASON = 12
const CRIME_VANDALISM = 13

object arrested


local
int witnesses
endlocal


##
##  Justice_Theft - Someone stole things
##

function justice_theft

# Is there a suspect?

if_not_exists suspect
	return
endif

# What was stolen?

if_not_exists victim
	return
endif

# Okay, we have an alleged theft and a suspect.
# Determine if a crime has been committed

# Is the object public property?
if_not_exists victim.stats.owner
	return
endif

# Does the object belong to the accused?
if victim.stats.owner = suspect
	return
endif

# Are they both party members?  (Thanks for finding this Michael!)
if_flag victim.stats.owner IN_PARTY
	if_flag suspect IN_PARTY
		return
	endif
endif

# Is the owner a person?  (Not an artifact or egg)
if_not_flag victim.stats.owner IS_PERSON
	return
endif

# Invisible?
if suspect.user.potion0 > 0
        return
endif


# Thieving scoundrel!
let suspect.user.user19 = CRIME_THEFT
let suspect.user.obj0 = victim

# And were there any witnesses?

let witnesses = 0
for_all_onscreen justice_stopthief

# No

if witnesses = 0
#	print suspect.personalname
#	print " was "
	print "Stealing!"
	printcr
else
#	print suspect.personalname
#	print " must be arrested! "
	print "~STOP THIEF!~"
	printcr
	call call_guards
endif

end

##
##  If you stole the papal ring or something
##

function justice_theft_deadly
# Is there a suspect?

if_not_exists suspect
	return
endif

# Thieving scoundrel!
let suspect.user.user19 = CRIME_THEFT
let suspect.user.obj0 = victim

# And were there any witnesses?

let witnesses = 0
for_all_onscreen justice_attack_party

if witnesses > 0
	print "~EXECUTE THE THIEF!~"
	printcr
	call call_guards_deadly
endif

end



##
##  Justice_Assault - Beating people up
##

function justice_assault

# Is there a suspect?

if_not_exists suspect
	return
endif

# Who or what was attacked?

if_not_exists victim
	return
endif

# If it's an outlaw, do nothing
if victim.label.race = "outlaw"
	return
endif

# Are they human or animal?
if victim.stats.intel <= 90
	return
endif

# If they die, it becomes murder
if victim.stats.hp < 1
	let suspect.user.user19 = CRIME_MURDER
else
	let suspect.user.user19 = CRIME_ASSAULT
endif
let suspect.user.obj0 = victim

# Were there any witnesses?

let witnesses = 0
all_around me radius 20 does justice_stopthief

if witnesses > 0
	if suspect.user.user19 = CRIME_MURDER
		print "~HELP!  MURDER!!~"
	else
		print "~HELP!  HELP!~"
	endif

	printcr
	call call_guards
endif

end


##
##  Hit_Jesus - Someone attacked the cross
##

function hit_jesus

let suspect = me
let victim = current

# Repair the Crucifix to prevent it being destroyed
if victim.stats.hp <= 0
	let victim.stats.hp = 75
	check_hurt victim
endif

if_not_exists suspect
	return
endif

if suspect.stats.intelligence < 40
	return
endif

if_not_exist victim
	return
endif

if_not_onscreen victim
	return
endif

talk_to "people/church/crucifix.txt" "kill"

# Jesus might have tripped the indulgences and nulled out the suspect
if_not_exists suspect
	return
endif

let suspect.user.user19 = CRIME_BLASPHEMY
let suspect.user.obj0 = victim

let witnesses = 0
all_around suspect radius 32 does justice_attack_party

if witnesses > 0
	print "~DESTROY IT!~"
	printcr
	call call_guards
endif

end


##
##  Hit_Panther - If you attack a panther, you die
##

function hit_panther

let suspect = me
let victim = current

if_not_exists suspect
	return
endif

if suspect.stats.intelligence < 40
	return
endif

if_not_exist victim
	return
endif

if_not_onscreen victim
	return
endif

let suspect.user.user19 = CRIME_ASSAULT
let suspect.user.obj0 = victim

let witnesses = 0
all_around suspect radius 32 does justice_attack_party

if witnesses > 0
	print "~DESTROY THE INTRUDER!~"
	printcr
	call call_guards_deadly
endif

end



##
##  A blasphemous act has been committed
##

function justice_blasphemy

let suspect = me

if_not_exists suspect
	return
endif

# Is it rational?
if_not_flag suspect IS_PERSON
	return
endif

let suspect.user.user19 = CRIME_BLASPHEMY
let suspect.user.obj0 = null

let witnesses = 0
all_around suspect radius 32 does justice_attack_party

if witnesses > 0
	print "~KILL THE BLASPHEMER!~"
	printcr
endif

end


##
##  You have committed a heresy
##

function justice_heresy

let suspect = me

if_not_exists suspect
	return
endif

# Is it rational?
if_not_flag suspect IS_PERSON
	return
endif

let suspect.user.user19 = CRIME_HERESY
let suspect.user.obj0 = null

let witnesses = 0
all_around suspect radius 32 does justice_attack_party

if witnesses > 0
	print "~BURN THE HERETIC!~"
	printcr
endif

end


##
##  justice_desecration - you been naughty
##

function justice_desecration

# Is there a suspect?

if_not_exists suspect
	return
endif

# Who or what was attacked?

if_not_exists victim
	return
endif

# There was a desecration.  Only the player would dare do that
set_user_flag "desecrate" = 1

let suspect.user.user19 = CRIME_DESECRATION
let suspect.user.obj0 = victim

# Were there any witnesses?

let witnesses = 0
all_around suspect radius 32 does justice_attack_party

if witnesses > 0
	print "~GET THEM!  HANG THEM!  BURN THEM!~"
	printcr
endif

end


##
##  justice_vandalism - you been naughty
##

function justice_vandalism

# Is there a suspect?

if_not_exists suspect
#	print "vandal: No suspect|"
	return
endif

# Who or what was attacked?

if_not_exists victim
#	print "vandal: No victim|"
	return
endif

# Is the object public property?
if_not_exists victim.stats.owner
#	print "vandal: public|"
	return
endif

# Does the object belong to the accused?
if victim.stats.owner = suspect
#	print "vandal: yours|"
	return
endif

# Are they both party members?  (Thanks for finding this Michael!)
if_flag victim.stats.owner IN_PARTY
	if_flag suspect IN_PARTY
#		print "vandal: of party|"
		return
	endif
endif

# Is the owner a person?  (Not an artifact or egg)
if_not_flag victim.stats.owner IS_PERSON
#	print "vandal: owner not human|"
	return
endif

# Invisible?
if suspect.user.potion0 > 0
        return
endif

let suspect.user.user19 = CRIME_VANDALISM
let suspect.user.obj0 = victim

# Were there any witnesses?

let witnesses = 0
all_around suspect radius 32 does justice_stopthief

if witnesses > 0
	print "~VANDAL!~"
	printcr
	call call_guards
endif

end


##
##  justice_calloff - Call off your dogs
##

function justice_calloff

all_around me radius 32 does justice_calloff_guards
#for_all_onscreen justice_calloff_guards

end


##
##  Justice_HTreason - Beating a king up
##

function justice_HTreason

# Is there a suspect?

if_not_exists suspect
	return
endif

# Who or what was attacked?

if_not_exists victim
	return
endif

let suspect.user.obj0 = victim

# Assume it's High treason unless told otherwise
if suspect.user.user19 <> CRIME_TREASON
	let suspect.user.user19 = CRIME_HIGHTREASON
	if victim.stats.hp > 1
		print "The King calls for help!"
		printcr
	endif
endif

# If the king is dead, it becomes regicide
if victim.stats.hp < 1
	let suspect.user.user19 = CRIME_REGICIDE
#	print "~AAGHH!~"	# Stop the dead king screaming when seen
#	printcr
endif

# Summon guards to the King
call call_guards

# Were there any witnesses?

let witnesses = 0
for_all_onscreen justice_attack_party

if witnesses > 0

	if suspect.user.user19 = CRIME_TREASON
		print "~Treason!  TREASON!!~"
		printcr
		redraw_text
	endif

	if suspect.user.user19 = CRIME_HIGHTREASON
		if_flag suspect IS_FEMALE
			print "~GUARDS!  OFF WITH HER HEAD!~"
		else
			print "~GUARDS!  OFF WITH HIS HEAD!~"
		endif
		printcr
		redraw_text
		wait 1000 NONBLOCKING
	endif

	if suspect.user.user19 = CRIME_REGICIDE
		print "~TAKE THEM ALIVE!!  MAKE THEM SUFFER!!~"
		printcr
		# If there are witnesses, get them to call the guards
		call call_guards
	endif
endif

end

##
##  Bootstrap for spoken treason 
##

function justice_Treason
let suspect = me
let victim = current
let suspect.user.user19 = CRIME_TREASON
let suspect.user.obj0 = victim
call justice_HTreason
end


##
##  Justice_Regicide - You killed the King
##

function justice_Regicide

# Is there a suspect?

if_not_exists suspect
	return
endif

# Just to be clear on this
let suspect.user.user19 = CRIME_REGICIDE

# Summon guards to the King
call call_guards

# Were there any witnesses?

let witnesses = 0
for_all_onscreen justice_attack_party

if witnesses > 0

	print "~THEY DID IT!  THEY KILLED THE KING!!~"
	printcr
	# If there are witnesses, get them to call the guards
	call call_guards
endif
end

function justice_Regicide_bootstrap
let suspect = me
let suspect.user.user19 = CRIME_REGICIDE
# Need to find victim (king) and set obj0
call justice_Regicide
end



##
##  Justice_Blackcock - you don't want to know
##


function justice_blackcock

# Is there a suspect?

if_not_exists suspect
	return
endif

# Who or what was attacked?

if_not_exists victim
	return
endif

let suspect.user.obj0 = victim

# If they die, it becomes murder
if victim.stats.hp < 1
	let suspect.user.user19 = CRIME_MURDER
	print "~Avenge me, brothers!  I go to join the Evil One!~"
	printcr
	redraw_text
	wait 1000 NONBLOCKING
endif

# Were there any witnesses?
let witnesses = 0
for_all_onscreen justice_attack_party

if witnesses > 0
	if suspect.user.user19 = CRIME_MURDER
		print "~Feed them to the slugs!!~"
		printcr
	endif
endif

end





function call_guards

if_not_exists victim
	print "Call guards: no victim|"
	return
endif

# Stop revenge for outlaws
if victim.label.race = "outlaw"
	return
endif

for_all_onscreen justice_arrest		# Recruit guards onscreen

# Spawned guards cannot summon more guards
if_not_flag me IS_SPAWNED
	call summon_guards			# Very good Asok, you bring more..
	return
endif

end


function call_guards_deadly

for_all_onscreen justice_attack_party
# Spawned guards cannot summon more guards
if_not_flag me IS_SPAWNED
	call summon_guards			# Very good Asok, you bring more..
	return
endif

end



##
##  A bishop or cardinal has been murdered!
##  Now heads are really going to roll
##

##  Wait a bit before proclaiming 

function justice_bishop_delayed
if me.user.user0 > 0
	add me.user.user0 - 1
	return
endif

let me.enemy = me.target
let current = me
call justice_bishop
stop_action me
end

##
##  Now the LORD gets really angry.
##

function justice_bishop
private

# Safety check
if_not_exists current
	print "Spurious bishop death"	
	printcr
	return
endif

# No enemy?  That's odd
if_not_exists current.enemy
	# The player must have engineered this somehow, get them
	talk_to "people/church/lord.txt" "cardinal_n"
	call fry_player
	return
endif

# Was it the player?
if current.enemy == player
	# Yes.  Tell them about it.
	talk_to "people/church/lord.txt" "cardinal_p"
else
	talk_to "people/church/lord.txt" "cardinal_u"
endif

call fry_current
end

##
##  Cook the player
##

function fry_player
call find_hero
let current = me
let current.enemy = me
call fry_current
end

function fry_current
object oldme

let oldme = me
let me = current
call god_killenemy_slowly
if_exists me.enemy
	# Turn them into a skeleton
	if me.enemy.label.race = "human"
		replace me.enemy = "bones0"
		set_direction me.enemy = RIGHT
	else
		replace me.enemy = "ash"
	endif

	# Prevent the heap of ash resuming its schedule
	set_flag me.enemy NO_SCHEDULE = 1

endif
let me = oldme

end


##
##  Justice_Intruder - Someone broke into the treasury/pope's bedroom
##

function justice_intruder
int alreadyguilty = 0

# Is there a suspect?

if_not_exists suspect
	return
endif

let suspect.user.obj0 = null

# No double jeopardy
if suspect.user.user19 = CRIME_TRESPASSING
	let alreadyguilty = 1
endif

# Thieving scoundrel!
let suspect.user.user19 = CRIME_TRESPASSING

# And were there any witnesses?

let witnesses = 0
for_all_onscreen justice_stopthief

# No

if witnesses <> 0
	if alreadyguilty = 0
		print "~GUARDS!  INTRUDER!~"
		printcr
	endif
	call call_guards
endif

end


function justice_intruder_deadly
int alreadyguilty = 0

# Is there a suspect?

if_not_exists suspect
	return
endif

let suspect.user.obj0 = null

# No double jeopardy
if suspect.user.user19 = CRIME_TRESPASSING
	let alreadyguilty = 1
endif

# Thieving scoundrel!
let suspect.user.user19 = CRIME_TRESPASSING

# And were there any witnesses?

let witnesses = 0
for_all_onscreen justice_attack_party

if witnesses > 0
	if alreadyguilty = 0
		print "~SLAY THE INTRUDER!~"
		printcr
	endif
	call call_guards_deadly
endif

end



########################################
#  Callbacks used by For_All_Onscreen  #
########################################


##
##	Stop Thief!
##	If the current object is not of the party it gives chase
##

function justice_stopthief

# Prevent anyone from trying to wreak justice upon themselves
if current = suspect
	return
endif

# Are you smart enough to spot a theft?
if current.stats.intel < 90
	return
endif

# Are you conscious?
if current.user.unconscious > 0
	return
endif

# Check for indulgences
call check_indulgences
if_not_exists suspect
	return
endif

if suspect.user.vigilante = 0			# Licensed to kill?
	if_not_flag current IN_PARTY		# Are you of Us?
		let current.enemy = suspect

		if suspect.user.user19 = CRIME_MURDER

			if suspect.stats.hp > current.stats.hp
				# Too strong, run away!
				start_activity current does enemy_flee to suspect
			else
				# Beat them up
				start_activity current does enemy_attack to suspect
			endif

/*
			print  current.personalname
			print "("
			print current.name
			print ") at "
			print current.x
			print ","
			print current.y
			print " accuses "
			print_bestname suspect
			print " of murder"
			printcr
*/
#			status 3
		else
			let arrested = null
			start_activity current does enemy_arrest to suspect
		endif
		add witnesses + 1
		# Grant permission to kill (reset by start_activity etc)
		let current.user.vigilante = 1
	endif
endif

end


##
##	Attack Party
##	If the current object is not of the party it gives chase
##

function justice_attack_party

# Prevent anyone from trying to wreak justice upon themselves
if current = suspect
	return
endif

if current.label.faction = "animal"
	return
endif

let victim = suspect.user.obj0

# Make sure the faction cares about the crime
if_exists victim
	if current.label.faction <> victim.label.faction
		return
	endif
endif

# Check for indulgences
call check_indulgences
if_not_exists suspect
	return
endif

if suspect.user.vigilante = 0			# Licensed to kill?
	if_not_flag current IN_PARTY		# Are you of Us?
		# Are you conscious?
		if current.user.unconscious > 0
			return
		endif
		let current.enemy = suspect
		# Attack and kill
		start_activity current does enemy_attack to suspect
		add witnesses + 1
		# Grant permission to hurt (reset by start_activity etc)
		let current.user.vigilante = 1
	endif
endif

end


##
##	Call off the vigilantes
##

function justice_calloff_guards

if current.enemy = me
	if_flag current IN_PARTY
		return	# Prevent the player getting de-brained
	endif
	# Stop attacking
	let current.enemy = null
	stop_activity current
	resume_activity current
	let current.user.vigilante = 0
	let current.user.user19 = CRIME_NONE
	let suspect.user.obj0 = null
endif

end


##
##	Guards!  Arrest that person!
##	If the current object is a guard, it goes into arrest mode
##

function justice_arrest

# Prevent anyone from trying to wreak justice upon themselves
if current = suspect
	return
endif

# Stop sheep arresting you
if current.label.faction = "animal"
	return
endif

# Stop corpses being thrown into jail (sigh)
if suspect.stats.hp < 1
	# Stop them just staring at the corpse instead
	if_not_flag current IN_PARTY
		stop_activity current
		resume_activity current
	endif
	return
endif

# Stop panthers trying to arrest each other for being panthers
if suspect.user.user19 == CRIME_BEAST
	if suspect is called "guard_panther"
		if current.label.faction <> "medieval"
			return
		endif
	endif
endif


# Check for indulgences
call check_indulgences
if_not_exists suspect
	return
endif

if suspect.user.vigilante = 0			# Licensed to kill?
	if_not_flag current IN_PARTY		# Are you of Us?
		if_flag current IS_GUARD
			let current.enemy = suspect
			start_activity current does enemy_arrestnow to suspect
			# Grant permission to hurt (reset by start_activity etc)
			let current.user.vigilante = 1
			let arrested = null
		endif
	endif
endif

end


##
##  Justice_Beast - A wild beast runs amok in the city
##

function justice_beast
int alreadyguilty = 0

# Is there a suspect?
if_not_exists suspect
	return
endif

# Stop everyone freaking out over a dead bandit
if suspect.stats.hp < 1
	set_flag victim IS_HORRIBLE = 0 # Mark the corpse 'police-aware'
	return
endif

# No double jeopardy
if suspect.user.user19 = CRIME_BEAST
	let alreadyguilty = 1
endif

let suspect.user.user19 = CRIME_BEAST
let suspect.user.obj0 = victim

# Were there any witnesses?

all_around me radius 20 does justice_attack_party

if alreadyguilty = 0
	print "~BEAST!  BEAST!~"
	printcr
endif
call call_guards

end


##
##  Justice_Demon
##

function justice_demon
int alreadyguilty = 0

# Is there a suspect?
if_not_exists suspect
	return
endif

# No double jeopardy
if suspect.user.user19 = CRIME_BEAST
	let alreadyguilty = 1
endif

let suspect.user.user19 = CRIME_BEAST
let suspect.user.obj0 = victim

# Were there any witnesses?
all_around me radius 20 does justice_attack_party

if alreadyguilty = 0
	print "~DEMON!  KILL IT!~"
	printcr
	call call_guards
endif
end



##
##  The player usurps King Edwyg's throne
##

##  Wait a bit before proclaiming 

function justice_edwyg
if me.user.user0 > 0
	add me.user.user0 - 1
	return
endif

let current = me
talk_to "people/church/lord.txt" "regicide"
stop_action me
end




##
##  Is the player allowed to commit this crime?
##

function check_indulgences
object indulgence
string needs

if_not_exist suspect
	return
endif

if current.label.faction <> "medieval"
	return
endif


# This one trumps everything
find indulgence = "INDULGENCE_PLENARY" inside suspect
if_exists indulgence
	let suspect = null
	return
endif

let needs = ""
if suspect.user.user19 = CRIME_THEFT
	let needs = "INDULGENCE_THEFT"
endif
if suspect.user.user19 = CRIME_MURDER
	let needs = "INDULGENCE_MURDER"
endif

if suspect.user.user19 = CRIME_ASSAULT
	let needs = "INDULGENCE_ASSAULT"
endif

if suspect.user.user19 = CRIME_REGICIDE
	let needs = "INDULGENCE_MURDER"
endif

if needs = ""
	return
endif

find indulgence = needs inside suspect
if_exists indulgence
	let suspect.user.obj0 = null
	let suspect = null
	return
endif

end


