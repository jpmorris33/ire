#####################
#                   #
#  Dra'kaan keypad  #
#                   #
#####################

const KPD_X = 160
const KPD_Y = 120

integer_array keypad_d_x[6]
object_array keypad_d_icon[8]
userstring kp_input_d 6	# user input

transient keypad_d_x
transient keypad_d_icon

##
##  Entry point
##

function use_keypad_drak

int x
int y
int ptr = 1
int pkey = 0
string entered

set_string kp_input_d = "000000"
let entered = kp_input_d

if_not_exists keypad_d_icon[1]
	set_array keypad_d_x[1] = ( 60, 91, 122, 153, 184, 215 )

	create keypad_d_icon[1] = "DRAK_KEYPAD0"
	create keypad_d_icon[2] = "DRAK_KEYPAD1"
	create keypad_d_icon[3] = "DRAK_KEYPAD2"
	create keypad_d_icon[4] = "DRAK_KEYPAD3"
	create keypad_d_icon[5] = "DRAK_KEYPAD4"
	create keypad_d_icon[6] = "DRAK_KEYPAD5"
	create keypad_d_icon[7] = "DRAK_KEYPAD6"
	create keypad_d_icon[8] = "DRAK_KEYPAD7"
	create drak_keypad = "DRAK_KEYPAD"
endif

save_screen

# Set up mouse grid

let x = KPD_X + 51
let y = KPD_Y + 96
mouse_range KEY_A = x y 33 33
range_pointer KEY_A = 1
add x + 34

mouse_range KEY_B = x y 33 33
range_pointer KEY_B = 1
add x + 34

mouse_range KEY_C = x y 33 33
range_pointer KEY_C = 1
add x + 34

mouse_range KEY_D = x y 33 33
range_pointer KEY_D = 1

let x = KPD_X + 51
add y + 34

mouse_range KEY_E = x y 33 33
range_pointer KEY_E = 1
add x + 34

mouse_range KEY_F = x y 33 33
range_pointer KEY_F = 1
add x + 34

mouse_range KEY_G = x y 33 33
range_pointer KEY_G = 1
add x + 34

mouse_range KEY_H = x y 33 33
range_pointer KEY_H = 1

let x = KPD_X + 226
let y = KPD_Y + 96
mouse_range KEY_ENTER = x y 33 33
range_pointer KEY_ENTER = 1

let y = KPD_Y + 131
mouse_range KEY_ESC = x y 33 33
range_pointer KEY_ESC = 1

draw_object drak_keypad at KPD_X KPD_Y

# Start the loop

do

	getkey_quiet

	# Mouse click?
	if key = KEY_MOUSE
		# Fake spell shortcut
		let key = mouseclick
		flush_mouse BLOCKING
	endif

	# Enter a number
	if key >= KEY_A
		if key <= KEY_H
			if ptr < 7
				let pkey = key - KEY_A
				add pkey + 1			# Correct it
				let x = keypad_d_x[ptr] + KPD_X
				let y = 27 + KPD_Y
				draw_object keypad_d_icon[pkey] at x y
				add pkey + '0'
				strsetpos kp_input_d ptr = pkey	# Poke into string
				add ptr + 1
				strsetpos kp_input_d ptr = 0	# Terminate
			endif
			let key = 0
		endif
	endif

	# Quit (was reset)
	if key = KEY_ESC
		let ptr = 1
		draw_object drak_keypad at KPD_X KPD_Y
	endif

	# Enter
	if key = KEY_ENTER

		if entered = current.funcs.user1
			# Call wield function
			call current.funcs.wield

			# Exit
			load_screen
			flush_mouse NONBLOCKING
			let key = 0
			return
		endif

		# Wrong
		let ptr = 1
		draw_object drak_keypad at KPD_X KPD_Y
	endif

while key <> KEY_ESC

load_screen
let key = 0

return
end

